---
kind: pipeline
type: docker
name: build

volumes:
- name: dockersocket
  host:
    path: /var/run/docker.sock

steps:
- name: docker
  image: livingdocs/docker-node
  volumes:
    - name: dockersocket
      path: /var/run/docker.sock
  environment:
    DOCKER_USERNAME:
      from_secret: DOCKER_USERNAME
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - |
      SHA_TAG=livingdocs/backport:sha-$DRONE_COMMIT_SHA
      BRANCH_TAG=livingdocs/backport:branch-$(echo $DRONE_BRANCH | sed 's/[^a-zA-Z0-9.-]/-/g')

      docker-login
      docker build -t $SHA_TAG -t $BRANCH_TAG .
      docker push $SHA_TAG
      docker push $BRANCH_TAG

      echo -----------------
      echo Docker Tag: $SHA_TAG
      echo Docker Branch Tag: $BRANCH_TAG
      echo -----------------

- name: release
  image: livingdocs/semantic-release:v1.2.2
  environment:
    GH_TOKEN:
      from_secret: GH_TOKEN

trigger:
  event: [push]

---
kind: pipeline
type: docker
name: tag

volumes:
- name: dockersocket
  host:
    path: /var/run/docker.sock

steps:
- name: docker
  image: livingdocs/docker-node
  volumes:
    - name: dockersocket
      path: /var/run/docker.sock
  environment:
    DOCKER_USERNAME:
      from_secret: DOCKER_USERNAME
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - |
      SHA_TAG=livingdocs/backport:sha-$DRONE_COMMIT_SHA
      RELEASE_TAG=livingdocs/backport:$DRONE_TAG

      docker-login
      docker build -t $RELEASE_TAG . -f-<<EOF
      FROM $SHA_TAG
      RUN node -e 'const pkg = require("./package.json"); pkg.version = "$DRONE_TAG".replace(/^v/, ""); fs.writeFileSync("./package.json", JSON.stringify(pkg, null, 2));'
      EOF

      docker push $RELEASE_TAG

      echo -----------------
      echo Docker Tag: $SHA_TAG
      echo Docker Branch Tag: $RELEASE_TAG
      echo -----------------

- name: deploy
  image: dtzar/helm-kubectl:3.6.2
  environment:
    KUBE_CONFIG:
      from_secret: kube_config
  commands:
    - |
      set -e
      mkdir -p /root/.kube && echo "$KUBE_CONFIG" > /root/.kube/config && chmod 600 /root/.kube/config
      kubectl -n tools set image deployment/backport backport=livingdocs/backport:$DRONE_TAG
      kubectl -n tools rollout status -w deployment/backport

trigger:
  event: [tag]

---
kind: signature
hmac: 786b65e7101970ed757d36db48636246ea11d31a9909af3f4d7b408737c9f803

...
